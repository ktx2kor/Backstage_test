{"openapi": "3.0.0", "info": {"contact": {"email": "nils.grunwald@de.bosch.com"}, "description": "This is the API specification for the MetaData API.", "license": {"name": "BIOS - Bosch internal open source project"}, "title": "CSI - MetaData API", "version": "1.0.0"}, "servers": [{"url": "/metadata/v1"}], "security": [{"keyId": []}], "tags": [{"description": "Access to CSI - MetaData Management Database", "name": "CSI - MetaData Management"}], "paths": {"/adls/container/sas-token": {"get": {"description": "This endpoint can be used to get the sas token of a container to upload files", "operationId": "fetch_adls_sas_token_for_container_upload", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AdlsSasToken"}}}, "description": "Successful in fetching sas token of a container based on container name."}, "401": {"content": {"application/json": {"example": {"type": "about:blank", "title": "Unauthorized", "detail": "Provided apikey is not valid", "status": 401}, "schema": {"$ref": "#/components/schemas/unauthorizeOrBadRequestResponse"}}}, "description": "Authentication failed"}, "500": {"content": {"application/json": {"example": {"message": "Error occurred in retrieving the sas token", "success": false}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "Custom Internal Sever Error"}}, "summary": "Returns sas token for the Adls container.", "tags": ["MetaData Handling"], "x-openapi-router-controller": "metadata.controllers.meta_data_handling_controller"}}, "/assets": {"get": {"description": "This endpoint can be used to search csi for existing assets for a set of given parameters.", "operationId": "get_assets", "parameters": [{"description": "A valid unique-name of a csi asset of type 'namespace'.", "in": "query", "name": "nameSpace", "required": false, "schema": {"type": "string"}}, {"description": "The name of a csi asset.", "in": "query", "name": "name", "required": false, "schema": {"type": "string"}}, {"description": "The part-number of a csi asset.", "in": "query", "name": "partNumber", "required": false, "schema": {"$ref": "#/components/schemas/partNumber"}}, {"description": "A version of a csi asset.", "in": "query", "name": "version", "required": false, "schema": {"type": "string"}}, {"description": "An uuid of a csi asset.", "in": "query", "name": "uuid", "required": false, "schema": {"format": "uuid", "type": "string"}}, {"description": "A valid csi schema type.", "in": "query", "name": "type", "required": false, "schema": {"$ref": "#/components/schemas/schemaType"}}, {"description": "A valid csi schema sub-type.", "in": "query", "name": "subType", "required": false, "schema": {"$ref": "#/components/schemas/schemaSubType"}}, {"description": "A name to identify csi asset's alias.", "in": "query", "name": "aliasName", "required": false, "schema": {"type": "string"}}, {"description": "A valid bosch-purl, also known as unique-name of an csi asset.", "in": "query", "name": "boschPurl", "required": false, "schema": {"type": "string"}}, {"description": "Page to be displayed.", "in": "query", "name": "pageNumber", "required": false, "schema": {"$ref": "#/components/schemas/pageNumber"}}, {"description": "Number of assets to be displayed in single page.", "in": "query", "name": "pageSize", "required": false, "schema": {"$ref": "#/components/schemas/pageSize"}}, {"description": "Parameter to sort the page.", "in": "query", "name": "sort", "required": false, "schema": {"$ref": "#/components/schemas/pageSort"}}, {"description": "Flag to indicate whether to include or exclude renamed assets.", "in": "query", "name": "includeRenamed", "required": false, "schema": {"default": false, "type": "boolean"}}, {"description": "Flag to indicate whether to include or exclude deleted assets.", "in": "query", "name": "includeDeleted", "required": false, "schema": {"default": false, "type": "boolean"}}, {"description": "A 'key' of the key:value pair of version-settings in csi asset.", "in": "query", "name": "versionKey", "required": false, "schema": {"type": "string"}}, {"description": "A 'value' of the key:value pair of version-settings in csi asset.", "in": "query", "name": "versionValue", "required": false, "schema": {"type": "string"}}, {"description": "A 'key' of the key:value pair of revision-settings in csi asset.", "in": "query", "name": "revisionKey", "required": false, "schema": {"type": "string"}}, {"description": "A 'value' of the key:value pair of revision-settings in csi asset.", "in": "query", "name": "revisionValue", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"example": {"data": [{"uuid": "930d7926-6ccb-4ff0-8e79-05916c333d37", "boschPurl": "pkg:bosch.product.tool/setlevel.de/set_level_object_based_camera_object_model@latest", "document": "...", "partNumber": "SW0000000100000", "created": "2021-09-21T12:05:49Z", "createdBy": "gni2si", "type": "product", "subType": "tool", "isLatest": false, "isDeleted": false, "isRenamed": false, "revision": 1}, {"uuid": "930d7926-6ccb-4ff0-8e79-05916c33ffff", "boschPurl": "pkg:bosch.product.tool/setlevel.de/set_level_object_based_camera_object_model@1.0.0", "document": "...", "partNumber": "SW0000000100001", "created": "2022-12-20T15:00:17Z", "createdBy": "rqt2kor", "type": "product", "subType": "tool", "isLatest": false, "isDeleted": false, "isRenamed": false, "revision": 1}], "pagination": {"totalCount": 1000, "totalPages": 100, "pageSize": 10}, "links": {"first": "https://server/identifiers?pageNumber=1&pageSize=10", "prev": "https://server/identifiers?pageNumber=2&pageSize=10", "next": "https://server/identifiers?pageNumber=4&pageSize=10", "last": "https://server/identifiers?pageNumber=10&pageSize=10"}}, "schema": {"$ref": "#/components/schemas/getAssetsResponse"}}}, "description": "Successful operation."}, "400": {"content": {"application/json": {"example": {"type": "about:blank", "title": "Bad Request", "detail": "'sbomdocuments' is not one of ['capability', 'dataobject', 'fixpoint', 'interface', 'namespace', 'product', 'project', 'sbomdocument', 'team']", "status": 400}, "schema": {"$ref": "#/components/schemas/unauthorizeOrBadRequestResponse"}}}, "description": "Bad request. See returned object for details."}, "401": {"content": {"application/json": {"example": {"type": "about:blank", "title": "Unauthorized", "detail": "Provided apikey is not valid", "status": 401}, "schema": {"$ref": "#/components/schemas/unauthorizeOrBadRequestResponse"}}}, "description": "Authentication failed"}, "404": {"content": {"application/json": {"example": {"message": "No asset found in database for - {'namespace': 'pkg:bosch.namespace/com/bosch/test', 'uuid': '0eb29464-b0e4-11ed-b600-f8b46ab7d39d', 'include_renamed': True, 'include_deleted': False}", "success": false}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "Schema not found for the specified schema type."}, "500": {"content": {"application/json": {"example": {"message": "Error occurred in auto Meta Data Handling", "success": false}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "Custom Internal Sever Error"}}, "summary": "Returns a list of assets for the given parameters.", "tags": ["MetaData Handling"], "x-openapi-router-controller": "metadata.controllers.meta_data_handling_controller"}, "post": {"description": "This endpoint can be used to create an new asset from a valid json schema in JSON or YAML format.", "operationId": "post_asset", "parameters": [{"description": "Describes whether the object should be marked as latest.", "explode": true, "in": "query", "name": "isLatest", "required": false, "schema": {"type": "boolean"}, "style": "form"}], "requestBody": {"content": {"application/json": {"example": {"$schema": "https://sbom.bosch.tech/schemas/v1/product/swelement", "identification": {"name": "new-asset", "nameSpace": "pkg:bosch.namespace/com/bosch", "version": "1.0.1", "shortDescription": "Describes the asset in brief"}, "lifeCycle": {"date": "2022-12-20", "status": "Released"}, "description": {"responsibleOrganization": {"name": "BD/TOA-GTC4"}}}, "schema": {"type": "object"}}, "application/yaml": {"example": {"$schema": "https://sbom.bosch.tech/schemas/v1/product/swelement", "identification": {"name": "new-asset", "nameSpace": "pkg:bosch.namespace/com/bosch", "version": "1.0.1", "shortDescription": "Describes the asset in brief"}, "lifeCycle": {"date": "2022-12-20", "status": "Released"}, "description": {"responsibleOrganization": {"name": "BD/TOA-GTC4"}}}, "schema": {"type": "object"}}}, "description": "Valid schema data in JSON or YAML .", "required": true, "x-body-name": "body"}, "responses": {"201": {"content": {"application/json": {"example": {"boschPurl": "pkg:bosch.product.swelement/com/new-asset@1.0.1", "document": {"identification": {"name": "new-asset", "nameSpace": "pkg:bosch.namespace/com/bosch", "version": "1.0.1", "shortDescription": "Describes the asset in brief"}, "lifeCycle": {"date": "2022-12-20", "status": "Released"}, "description": {"responsibleOrganization": {"name": "BD/TOA-GTC4"}}}, "uuid": "21f56c61-e4ae-4dbc-930c-14d7369ba823", "productVersionSet": {"uniqueName": "pkg:bosch.productversionset/test/new-asset", "uuid": "a41efe77-b750-484a-862e-b006bb5fe0d5", "document": {"identification": {"name": "new-asset", "nameSpace": "pkg:bosch.namespace/com/bosch"}, "baseIdentityIndex": "DV0000000J", "currentVersionIndex": 0, "hasCsiProducts": ["pkg:bosch.product.swelement/com/new-asset@1.0.0", "pkg:bosch.product.swelement/com/new-asset@1.0.1"], "totalProducts": 2}}}, "schema": {"$ref": "#/components/schemas/postAssetSuccessResponse"}}}, "description": "Successful creation."}, "400": {"content": {"application/json": {"example": {"type": "about:blank", "title": "Bad Request", "detail": "'yes' is not of type 'boolean'\n\nFailed validating 'type' in schema:\n    {'type': 'boolean'}\n\nOn instance:\n    'yes'", "status": 400}, "schema": {"$ref": "#/components/schemas/unauthorizeOrBadRequestResponse"}}}, "description": "Bad request. See returned object for details."}, "401": {"content": {"application/json": {"example": {"type": "about:blank", "title": "Unauthorized", "detail": "Provided apikey is not valid", "status": 401}, "schema": {"$ref": "#/components/schemas/unauthorizeOrBadRequestResponse"}}}, "description": "Authentication failed."}, "422": {"content": {"application/json": {"example": {"message": "UniqueName 'pkg:bosch.product.swelement/namespace-1/_self.root-load@29' is already in MetaData DB!", "success": false}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "(partially) Invalid input, see return message for details on all failed operations and reasons for errors."}, "500": {"content": {"application/json": {"example": {"message": "Error occurred in auto Meta Data Handling", "success": false}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "Custom Internal Sever Error."}}, "summary": "Creates an new asset from a valid csi schema.", "tags": ["MetaData Handling"], "x-openapi-router-controller": "metadata.controllers.meta_data_handling_controller"}}, "/assets/batch": {"post": {"description": "This endpoint can be used to perform operations (create, update and delete) in bulk on single or multiple provided data.", "operationId": "batch_assets", "requestBody": {"content": {"application/json": {"example": [{"operation": "create", "document": {}}, {"operation": "update", "document": {}}], "schema": {"items": {"$ref": "#/components/schemas/postAssetsBatchRequest"}, "type": "array"}}}, "description": "JSON data with operation [create,update,delete] and document data to be uploaded.", "required": true, "x-body-name": "post_assets_batch_request"}, "responses": {"200": {"content": {"application/json": {"example": {"success": true}, "schema": {"$ref": "#/components/schemas/successResponse"}}}, "description": "Successful operation."}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/unauthorizeOrBadRequestResponse"}}}, "description": "Invalid input, see return message for details on all failed operations and reasons for errors."}, "401": {"content": {"application/json": {"example": {"type": "about:blank", "title": "Unauthorized", "detail": "Provided apikey is not valid", "status": 401}, "schema": {"$ref": "#/components/schemas/unauthorizeOrBadRequestResponse"}}}, "description": "Authentication failed"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "(partially) Invalid input, see return message for details on all failed operations and reasons for errors."}, "500": {"content": {"application/json": {"example": {"message": "Error occurred in auto Meta Data Handling", "success": false}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "Custom Internal Sever Error"}}, "summary": "Performs a set of database operations on single/multiple provided items (bulk operation).", "tags": ["MetaData Handling"], "x-openapi-router-controller": "metadata.controllers.meta_data_handling_controller"}}, "/assets/has-access": {"get": {"deprecated": false, "operationId": "check_asset_access", "parameters": [{"description": "A valid bosch-purl, also known as unique-name of an csi asset.", "in": "query", "name": "boschPurl", "required": false, "schema": {"type": "string"}}, {"description": "A valid csi schema type.", "in": "query", "name": "type", "required": false, "schema": {"$ref": "#/components/schemas/schemaType"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/has-access"}}}, "description": "Returns boolean or error if any."}, "403": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "Forbidden error"}, "500": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "Custom Internal Sever Error"}}, "summary": "Returns a access true or false based on user have access for element", "tags": ["MetaData Handling"], "x-openapi-router-controller": "metadata.controllers.meta_data_handling_controller"}}, "/assets/query": {"post": {"description": "This endpoint can be used to search csi for existing assets with a posted json data structure according to the MongoDB operators for filter, projection, sort_order and limit as described in e.g. https://www.mongodb.com/docs/manual/reference/operator/aggregation/filter/", "operationId": "query_assets", "parameters": [{"description": "Page to be displayed.", "in": "query", "name": "pageNumber", "required": false, "schema": {"$ref": "#/components/schemas/pageNumber"}}, {"description": "Number of assets to be displayed in single page.", "in": "query", "name": "pageSize", "required": false, "schema": {"$ref": "#/components/schemas/pageSize"}}], "requestBody": {"content": {"application/json": {"example": {"filter": {"<field>": "<operator> | <value>"}, "sort_order": {"<field>": -1}, "projection": {"<field>": "True | False"}}, "schema": {"type": "object"}}}, "description": "Json structure to hold the filter, projection and sort-order instructions according to the MongoDB convention.", "required": true, "x-body-name": "body"}, "responses": {"200": {"content": {"application/json": {"example": {"data": [{"uuid": "930d7926-6ccb-4ff0-8e79-05916c333d37", "boschPurl": "pkg:bosch.product.tool/setlevel.de/set_level_object_based_camera_object_model@latest", "document": "...", "partNumber": "SW0000000100000", "created": "2021-09-21T12:05:49Z", "createdBy": "gni2si", "type": "product", "subType": "tool", "isLatest": false, "isDeleted": false, "isRenamed": false, "revision": 1}, {"uuid": "930d7926-6ccb-4ff0-8e79-05916c33ffff", "boschPurl": "pkg:bosch.product.tool/setlevel.de/set_level_object_based_camera_object_model@1.0.0", "document": "...", "partNumber": "SW0000000100001", "created": "2022-12-20T15:00:17Z", "createdBy": "rqt2kor", "type": "product", "subType": "tool", "isLatest": false, "isDeleted": false, "isRenamed": false, "revision": 1}], "pagination": {"totalCount": 1000, "totalPages": 100, "pageSize": 10}, "links": {"first": "https://server/identifiers?pageNumber=1&pageSize=10", "prev": "https://server/identifiers?pageNumber=2&pageSize=10", "next": "https://server/identifiers?pageNumber=4&pageSize=10", "last": "https://server/identifiers?pageNumber=10&pageSize=10"}}, "schema": {"$ref": "#/components/schemas/getAssetsResponse"}}}, "description": "Successful operation."}, "400": {"content": {"application/json": {"example": {"type": "about:blank", "title": "Bad Request", "detail": "'sbomdocuments' is not one of ['capability', 'dataobject', 'fixpoint', 'interface', 'namespace', 'product', 'project', 'sbomdocument', 'team']", "status": 400}, "schema": {"$ref": "#/components/schemas/unauthorizeOrBadRequestResponse"}}}, "description": "Bad request. See returned object for details."}, "401": {"content": {"application/json": {"example": {"type": "about:blank", "title": "Unauthorized", "detail": "Provided apikey is not valid", "status": 401}, "schema": {"$ref": "#/components/schemas/unauthorizeOrBadRequestResponse"}}}, "description": "Authentication failed"}, "404": {"content": {"application/json": {"example": {"message": "No asset found in database for - {'namespace': 'pkg:bosch.namespace/com/bosch/test', 'uuid': '0eb29464-b0e4-11ed-b600-f8b46ab7d39d', 'include_renamed': True, 'include_deleted': False}", "success": false}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "Schema not found for the specified schema type."}, "500": {"content": {"application/json": {"example": {"message": "Error occurred in auto Meta Data Handling", "success": false}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "Custom Internal Sever Error"}}, "summary": "Returns a list of assets for the posted MongoDB input query/operator rules.", "tags": ["MetaData Handling"], "x-openapi-router-controller": "metadata.controllers.meta_data_handling_controller"}}, "/assets/sbom": {"post": {"description": "This endpoint can be used to create a new root element and upload a valid SBOM in CycloneDX or SPDX format into the root element.", "operationId": "upload_sbom", "parameters": [{"description": "A valid bosch-purl, also known as unique-name of an csi asset.", "in": "query", "name": "boschPurl", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"example": {"bomFormat": "CycloneDX", "specVersion": 1.4, "version": 1, "components": [{"group": "com/bosch/test", "name": "A", "version": "1.0.0,", "hashes": [], "licenses": [], "purl": "pkg:bosch.product.swelement/com/bosch/test/a@1.0.0", "type": "application", "components": [{"group": "com/bosch/test", "name": "tc1B", "version": "1.0.0", "hashes": [], "licenses": [], "purl": "pkg:bosch.product.swelement/com/bosch/test/tc1b@1.0.0", "type": "library"}]}]}, "schema": {"type": "object"}}}, "description": "Valid SBOM file in CycloneDX or SPDX format.", "required": true, "x-body-name": "body"}, "responses": {"201": {"content": {"application/json": {"example": {"container_id": "d4531fc2-725e-45bd-92a0-71163b470f3a", "message": "Processing of sbom initialized...", "success": true}, "schema": {"$ref": "#/components/schemas/sbomSuccessMsgResponse"}}}, "description": "Successful creation."}, "400": {"content": {"application/json": {"example": {"type": "about:blank", "title": "Bad Request", "detail": "Missing query parameter 'boschPurl'", "status": 400}, "schema": {"$ref": "#/components/schemas/unauthorizeOrBadRequestResponse"}}}, "description": "Invalid input, see return message for details on all failed operations and reasons for errors."}, "401": {"content": {"application/json": {"example": {"type": "about:blank", "title": "Unauthorized", "detail": "Provided apikey is not valid", "status": 401}, "schema": {"$ref": "#/components/schemas/unauthorizeOrBadRequestResponse"}}}, "description": "Authentication failed."}, "422": {"content": {"application/json": {"example": {"message": "Provided bosch-purl already exists in database. Please upload sbom to existing asset.", "success": false}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "(partially) Invalid input, see return message for details on all failed operations and reasons for errors."}, "500": {"content": {"application/json": {"example": {"message": "Error occurred in auto Meta Data Handling", "success": false}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "Custom Internal Sever Error"}}, "summary": "Uploads an exiting SBOM in CycloneDX or SPDX format while creating new root element in CSI.", "tags": ["MetaData Handling"], "x-openapi-router-controller": "metadata.controllers.meta_data_handling_controller"}}, "/assets/{assetId}": {"delete": {"description": "This endpoint can be used to delete an csi asset of a valid asset-id, also known as uuid.", "operationId": "delete_asset", "parameters": [{"description": "An uuid of a csi asset.", "in": "path", "name": "assetId", "required": true, "schema": {"format": "uuid", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"example": {"success": true}, "schema": {"$ref": "#/components/schemas/successResponse"}}}, "description": "Successful operation."}, "401": {"content": {"application/json": {"example": {"type": "about:blank", "title": "Unauthorized", "detail": "Provided apikey is not valid", "status": 401}, "schema": {"$ref": "#/components/schemas/unauthorizeOrBadRequestResponse"}}}, "description": "Authentication failed."}, "422": {"content": {"application/json": {"example": {"message": "Provided asset_id ('713ed5e0-bb9d-427e-9501-bc6282e82426') is not found in database.", "success": false, "references": []}, "schema": {"$ref": "#/components/schemas/errorDeleteResponse"}}}, "description": "(partially) Invalid input, see return message for details on all failed operations and reasons for errors."}, "500": {"content": {"application/json": {"example": {"message": "Error occurred in auto Meta Data Handling", "success": false}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "Custom Internal Sever Error."}}, "summary": "Removes an existing asset from csi database.", "tags": ["MetaData Handling"], "x-openapi-router-controller": "metadata.controllers.meta_data_handling_controller"}, "get": {"description": "This endpoint can be used to retrieve a single asset by providing a valid csi asset-id, also known as uuid.", "operationId": "get_asset_with_asset_id", "parameters": [{"description": "An uuid of a csi asset.", "in": "path", "name": "assetId", "required": true, "schema": {"format": "uuid", "type": "string"}}, {"description": "Determines whether admin data should be included along with the document.", "explode": true, "in": "query", "name": "includeAdminData", "required": false, "schema": {"default": false, "type": "boolean"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"example": {"data": {"$schema": "https://sbom.bosch.tech/schemas/v1/product/tool", "externalReferences": [{"type": "documentation", "url": "https://inside-docupedia.bosch.com/confluence/display/CNFV/ARMCLANG+Compiler"}], "identification": {"name": "ARMClang", "nameSpace": "pkg:bosch.namespace/com/arm", "shortDescription": "C-Compiler for ARM architecture", "version": "6.6.4"}, "date": {"date": "2022-01-01", "status": "Draft"}}}, "schema": {"type": "object"}}}, "description": "Successful operation"}, "400": {"content": {"application/json": {"example": {"type": "about:blank", "title": "Bad Request", "detail": "'yes' is not of type 'boolean'\n\nFailed validating 'type' in schema:\n    {'type': 'boolean'}\n\nOn instance:\n    'yes'", "status": 400}, "schema": {"$ref": "#/components/schemas/unauthorizeOrBadRequestResponse"}}}, "description": "Invalid input, see return message for details on all failed operations and reasons for errors."}, "401": {"content": {"application/json": {"example": {"type": "about:blank", "title": "Unauthorized", "detail": "Provided apikey is not valid", "status": 401}, "schema": {"$ref": "#/components/schemas/unauthorizeOrBadRequestResponse"}}}, "description": "Authentication failed."}, "422": {"content": {"application/json": {"example": {"message": "Provided asset_id ('713ed5e0-bb9d-427e-9501-bc6282e82426') is not found in database.", "success": false}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "(partially) Invalid input, see return message for details on all failed operations and reasons for errors."}, "500": {"content": {"application/json": {"example": {"message": "Error occurred in auto Meta Data Handling", "success": false}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "Custom Internal Sever Error"}}, "summary": "Returns a single asset for the given asset-id.", "tags": ["MetaData Handling"], "x-openapi-router-controller": "metadata.controllers.meta_data_handling_controller"}, "put": {"description": "This endpoint can be used to a update a single asset, of a valid csi asset-id, also known as uuid, with a valid schema.", "operationId": "update_asset", "parameters": [{"description": "An uuid of a csi asset.", "in": "path", "name": "assetId", "required": true, "schema": {"format": "uuid", "type": "string"}}, {"description": "Describes whether the object should be marked as latest.", "explode": true, "in": "query", "name": "isLatest", "required": false, "schema": {"type": "boolean"}, "style": "form"}], "requestBody": {"content": {"application/json": {"example": {"$schema": "https://sbom.bosch.tech/schemas/v1/product/swelement", "identification": {"name": "new-asset", "namespace": "pkg:bosch.namespace/com/bosch", "version": "1.0.1", "shortDescription": "Describes the asset in brief"}, "lifeCycle": {"date": "2022-12-20", "status": "Released"}, "description": {"responsibleOrganization": {"name": "BD/TOA-GTC4"}}}, "schema": {"type": "object"}}}, "description": "Valid JSON MetaData file data", "required": true, "x-body-name": "body"}, "responses": {"200": {"content": {"application/json": {"example": {"success": true}, "schema": {"$ref": "#/components/schemas/successResponse"}}}, "description": "Successful operation."}, "401": {"content": {"application/json": {"example": {"type": "about:blank", "title": "Unauthorized", "detail": "Provided apikey is not valid", "status": 401}, "schema": {"$ref": "#/components/schemas/unauthorizeOrBadRequestResponse"}}}, "description": "Authentication failed."}, "422": {"content": {"application/json": {"example": {"message": "Provided asset_id ('713ed5e0-bb9d-427e-9501-bc6282e82426') is not found in database.", "success": false}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "(partially) Invalid input, see return message for details on all failed operations and reasons for errors."}, "500": {"content": {"application/json": {"example": {"message": "Error occurred in auto Meta Data Handling", "success": false}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "Custom Internal Sever Error."}}, "summary": "Updates an existing csi asset from a valid schema.", "tags": ["MetaData Handling"], "x-openapi-router-controller": "metadata.controllers.meta_data_handling_controller"}}, "/assets/{assetId}/generate-sbom": {"post": {"description": "This endpoint can be used to generate or export a SBOM of an asset for the provided asset-id.", "operationId": "generate_sbom_for_asset", "parameters": [{"description": "An uuid of a csi asset.", "in": "path", "name": "assetId", "required": true, "schema": {"format": "uuid", "type": "string"}}, {"description": "The Bosch Purl of the component for which the BOM should be generated within the SBOMDocument. This parameter is required only when bomGenerationMode is set to subBom.", "explode": true, "in": "query", "name": "boschPurl", "required": false, "schema": {"type": "string"}, "style": "form"}], "requestBody": {"content": {"application/json": {"example": {"sbomFormat": "CycloneDX", "bomGenerationMode": "Bom", "cyclonedxConfig": {"bomStructure": "hierarchical", "excludeDataFields": {"components": {"author": false, "boschPurl": false, "copyright": false, "cpe": false, "externalReferences": false, "hashes": false, "licenses": false, "pedigree": false, "publisher": false, "purl": false, "supplier": false}, "header": {"dependencies": false, "externalReferences": false, "metadata": {"manufacture": false, "supplier": false}}}}}, "schema": {"$ref": "#/components/schemas/getSBOMGenerationConfig"}}}, "description": "Valid serialized sbom-generation-config as json.", "required": true, "x-body-name": "get_sbom_generation_config"}, "responses": {"200": {"content": {"application/json": {"schema": {"type": "object"}}}, "description": "Successful operation"}, "400": {"content": {"application/json": {"example": {"type": "about:blank", "title": "Bad Request", "detail": "'CycloneDXX' is not one of ['SPDX', 'CycloneDX']\n\nFailed validating 'enum' in schema:\n    {'default': 'CycloneDX',\n     'enum': ['SPDX', 'CycloneDX'],\n     'type': 'string'}\n\nOn instance:\n    'CycloneDXX'", "status": 400}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "Invalid input, see return message for details on all failed operations and reasons for errors."}, "401": {"content": {"application/json": {"example": {"type": "about:blank", "title": "Unauthorized", "detail": "Provided apikey is not valid", "status": 401}, "schema": {"$ref": "#/components/schemas/unauthorizeOrBadRequestResponse"}}}, "description": "Authentication failed"}, "422": {"content": {"application/json": {"example": {"message": "Provided asset_id ('713ed5e0-bb9d-427e-9501-bc6282e82426') is not found in database.", "success": false}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "(partially) Invalid input, see return message for details on all failed operations and reasons for errors."}, "500": {"content": {"application/json": {"example": {"message": "Error occurred in auto Meta Data Handling", "success": false}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "Custom Internal Sever Error"}}, "summary": "Generates an SBOM with the given format for the valid asset-id.", "tags": ["MetaData Handling"], "x-openapi-router-controller": "metadata.controllers.meta_data_handling_controller"}}, "/assets/{assetId}/restore": {"put": {"description": "This api endpoint can be used to restore a deleted asset into csi database and make it available again.", "operationId": "restore_asset", "parameters": [{"description": "An uuid of a csi asset.", "in": "path", "name": "assetId", "required": true, "schema": {"format": "uuid", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"example": {"success": true}, "schema": {"$ref": "#/components/schemas/successResponse"}}}, "description": "Successful operation"}, "401": {"content": {"application/json": {"example": {"type": "about:blank", "title": "Unauthorized", "detail": "Provided apikey is not valid", "status": 401}, "schema": {"$ref": "#/components/schemas/unauthorizeOrBadRequestResponse"}}}, "description": "Authentication failed"}, "422": {"content": {"application/json": {"example": {"message": "Provided asset_id ('713ed5e0-bb9d-427e-9501-bc6282e82426') is not found in database.", "success": false}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "(partially) Invalid input, see return message for details on all failed operations and reasons for errors."}, "500": {"content": {"application/json": {"example": {"message": "Error occurred in auto Meta Data Handling", "success": false}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "Custom Internal Sever Error"}}, "summary": "Restores a deleted asset again into csi database.", "tags": ["MetaData Handling"], "x-openapi-router-controller": "metadata.controllers.meta_data_handling_controller"}}, "/assets/{assetId}/sbom": {"post": {"description": "This endpoint can be used to upload a SBOM in CycloneDX or SPDX into an existing asset of a given asset-id.", "operationId": "upload_sbom_to_asset", "parameters": [{"description": "An uuid of a csi asset.", "in": "path", "name": "assetId", "required": true, "schema": {"format": "uuid", "type": "string"}}], "requestBody": {"content": {"application/json": {"example": {"bomFormat": "CycloneDX", "specVersion": 1.4, "version": 1, "components": [{"group": "com/bosch/test", "name": "A", "version": "1.0.0\",", "hashes": [], "licenses": [], "purl": "pkg:bosch.product.swelement/com/bosch/test/a@1.0.0", "type": "application", "components": [{"group": "com/bosch/test", "name": "tc1B", "version": "1.0.0", "hashes": [], "licenses": [], "purl": "pkg:bosch.product.swelement/com/bosch/test/tc1b@1.0.0\"", "type": "library"}]}]}, "schema": {"type": "object"}}}, "description": "Valid SBOM file in CycloneDX or SPDX format.", "required": true, "x-body-name": "body"}, "responses": {"200": {"content": {"application/json": {"example": {"container_id": "d4531fc2-725e-45bd-92a0-71163b470f3a", "message": "Processing of sbom initialized...", "success": true}, "schema": {"$ref": "#/components/schemas/sbomSuccessMsgResponse"}}}, "description": "Successful operation"}, "401": {"content": {"application/json": {"example": {"type": "about:blank", "title": "Unauthorized", "detail": "Provided apikey is not valid", "status": 401}, "schema": {"$ref": "#/components/schemas/unauthorizeOrBadRequestResponse"}}}, "description": "Authentication failed"}, "422": {"content": {"application/json": {"example": {"message": "Provided asset_id ('713ed5e0-bb9d-427e-9501-bc6282e82426') is not found in database.", "success": false}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "(partially) Invalid input, see return message for details on all failed operations and reasons for errors."}, "500": {"content": {"application/json": {"example": {"message": "Error occurred in auto Meta Data Handling", "success": false}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "Custom Internal Sever Error"}}, "summary": "Uploads an exiting SBOM in CycloneDX or SPDX to the identified asset-id element.", "tags": ["MetaData Handling"], "x-openapi-router-controller": "metadata.controllers.meta_data_handling_controller"}}, "/assets/{assetId}/sbom-documents": {"get": {"description": "This endpoint can be used to retrieve all sbom-documents associated with a given and valid csi asset-id.", "operationId": "get_sbomdocuments_for_asset", "parameters": [{"description": "An uuid of a csi asset.", "in": "path", "name": "assetId", "required": true, "schema": {"format": "uuid", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"example": {"sbom-documents": [{"uniqueName": "pkg:bosch.sbomdocument/com/bosch/wy9f80c9-796e-446d-a7a8-b92e27471111_0", "uuid": "04f92dce-b0e4-11ed-9d83-f8b46abbbbbb"}]}, "schema": {"$ref": "#/components/schemas/sbomDocumentSuccessResponse"}}}, "description": "Successful operation"}, "401": {"content": {"application/json": {"example": {"type": "about:blank", "title": "Unauthorized", "detail": "Provided apikey is not valid", "status": 401}, "schema": {"$ref": "#/components/schemas/unauthorizeOrBadRequestResponse"}}}, "description": "Authentication failed"}, "422": {"content": {"application/json": {"example": {"message": "Provided asset_id ('713ed5e0-bb9d-427e-9501-bc6282e82426') is not found in database.", "success": false}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "(partially) Invalid input, see return message for details on all failed operations and reasons for errors."}, "500": {"content": {"application/json": {"example": {"message": "Error occurred in auto Meta Data Handling", "success": false}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "Custom Internal Sever Error"}}, "summary": "Gets all SBOM documents associated with the given asset-id.", "tags": ["MetaData Handling"], "x-openapi-router-controller": "metadata.controllers.meta_data_handling_controller"}}, "/assets/{assetId}/usages": {"get": {"description": "This endpoint can be used to retrieve all elements where the unique-name corresponding to the asset-id is used or referenced.", "operationId": "get_usage_for_asset", "parameters": [{"description": "An uuid of a csi asset.", "in": "path", "name": "assetId", "required": true, "schema": {"format": "uuid", "type": "string"}}, {"description": "Determines usage type. Used directly in asset, used only in sbom or used in both.", "explode": true, "in": "query", "name": "usageMode", "required": false, "schema": {"default": "direct", "enum": ["direct", "all", "bom"], "type": "string"}, "style": "form"}, {"description": "Describes whether the response should be detailed or default.", "explode": true, "in": "query", "name": "detailedOutput", "required": false, "schema": {"type": "boolean"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/assetUsageSuccessResponse"}}}, "description": "Successful operation"}, "400": {"content": {"application/json": {"example": {"type": "about:blank", "title": "Bad Request", "detail": "'boms' is not one of ['direct', 'all', 'bom']\n\nFailed validating 'enum' in schema:\n    {'default': 'direct',\n     'enum': ['direct', 'all', 'bom'],\n     'type': 'string'}\n\nOn instance:\n    'boms'", "status": 400}, "schema": {"$ref": "#/components/schemas/unauthorizeOrBadRequestResponse"}}}, "description": "Invalid input, see return message for details on all failed operations and reasons for errors."}, "401": {"content": {"application/json": {"example": {"type": "about:blank", "title": "Unauthorized", "detail": "Provided apikey is not valid", "status": 401}, "schema": {"$ref": "#/components/schemas/unauthorizeOrBadRequestResponse"}}}, "description": "Authentication failed"}, "422": {"content": {"application/json": {"example": {"message": "Provided asset_id ('713ed5e0-bb9d-427e-9501-bc6282e82426') is not found in database.", "success": false}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "(partially) Invalid input, see return message for details on all failed operations and reasons for errors."}, "500": {"content": {"application/json": {"example": {"message": "Error occurred in auto Meta Data Handling", "success": false}, "schema": {"$ref": "#/components/schemas/errorResponse"}}}, "description": "Custom Internal Sever Error"}}, "summary": "Gets all usages of an asset for a given and valid asset-id.", "tags": ["MetaData Handling"], "x-openapi-router-controller": "metadata.controllers.meta_data_handling_controller"}}}, "components": {"parameters": {"isLatestOpt": {"description": "Describes whether the object should be marked as latest.", "explode": true, "in": "query", "name": "isLatest", "required": false, "schema": {"type": "boolean"}, "style": "form"}, "includeAdminDataOpt": {"description": "Determines whether admin data should be included along with the document.", "explode": true, "in": "query", "name": "includeAdminData", "required": false, "schema": {"default": false, "type": "boolean"}, "style": "form"}, "sbomFormatOpt": {"explode": true, "in": "query", "name": "sbomFormat", "required": false, "schema": {"default": "CycloneDX", "enum": ["SPDX", "CycloneDX"], "type": "string"}, "style": "form"}, "singleContextOpt": {"description": "Requires the asset-id for the single context sbom generation.", "explode": true, "in": "query", "name": "singleContext", "required": false, "schema": {"type": "string"}, "style": "form"}, "fullContextOpt": {"description": "Determines whether sbom should be generated for the mentioned asset or the dependencies too.", "explode": true, "in": "query", "name": "fullContext", "required": false, "schema": {"default": false, "enum": [true, false], "type": "boolean"}, "style": "form"}, "usageModeOpt": {"description": "Determines usage type. Used directly in asset, used only in sbom or used in both.", "explode": true, "in": "query", "name": "usageMode", "required": false, "schema": {"default": "direct", "enum": ["direct", "all", "bom"], "type": "string"}, "style": "form"}, "detailedOutputOpt": {"description": "Describes whether the response should be detailed or default.", "explode": true, "in": "query", "name": "detailedOutput", "required": false, "schema": {"type": "boolean"}, "style": "form"}, "flatStructureOpt": {"description": "Determines whether a hierarchical CycloneDX SBOM (flatStructure='N') or flat CycloneDX SBOM (flatStructure='Y') is generated. If this optional parameter is not specified, a hierarchical CycloneDX SBOM is generated by default.", "explode": true, "in": "query", "name": "flatStructure", "required": false, "schema": {"default": false, "enum": [true, false], "type": "boolean"}, "style": "form"}, "containerLogLevelOpt": {"description": "Defines the log level (INFO, WARN or ERROR) that is used to filter the result logs.", "explode": true, "in": "query", "name": "containerLogLevel", "required": false, "schema": {"default": "WARN", "enum": ["INFO", "WARN", "ERROR"], "type": "string"}, "style": "form"}, "providerPurl": {"description": "The Bosch Purl of the component for which the BOM should be generated within the SBOMDocument. This parameter is required only when bomGenerationMode is set to subBom.", "explode": true, "in": "query", "name": "boschPurl", "required": false, "schema": {"type": "string"}, "style": "form"}, "nameSpaceOpt": {"description": "A valid unique-name of a csi asset of type 'namespace'.", "in": "query", "name": "nameSpace", "required": false, "schema": {"type": "string"}}, "nameOpt": {"description": "The name of a csi asset.", "in": "query", "name": "name", "required": false, "schema": {"type": "string"}}, "partNumberOpt": {"description": "The part-number of a csi asset.", "in": "query", "name": "partNumber", "required": false, "schema": {"$ref": "#/components/schemas/partNumber"}}, "versionOpt": {"description": "A version of a csi asset.", "in": "query", "name": "version", "required": false, "schema": {"type": "string"}}, "uuidOpt": {"description": "An uuid of a csi asset.", "in": "query", "name": "uuid", "required": false, "schema": {"format": "uuid", "type": "string"}}, "schemaTypesOpt": {"description": "A valid csi schema type.", "in": "query", "name": "type", "required": false, "schema": {"$ref": "#/components/schemas/schemaType"}}, "schemaSubTypesOpt": {"description": "A valid csi schema sub-type.", "in": "query", "name": "subType", "required": false, "schema": {"$ref": "#/components/schemas/schemaSubType"}}, "aliasNameOpt": {"description": "A name to identify csi asset's alias.", "in": "query", "name": "aliasName", "required": false, "schema": {"type": "string"}}, "boschPurlOpt": {"description": "A valid bosch-purl, also known as unique-name of an csi asset.", "in": "query", "name": "boschPurl", "required": false, "schema": {"type": "string"}}, "pageNumberOpt": {"description": "Page to be displayed.", "in": "query", "name": "pageNumber", "required": false, "schema": {"$ref": "#/components/schemas/pageNumber"}}, "pageSizeOpt": {"description": "Number of assets to be displayed in single page.", "in": "query", "name": "pageSize", "required": false, "schema": {"$ref": "#/components/schemas/pageSize"}}, "pageSortOpt": {"description": "Parameter to sort the page.", "in": "query", "name": "sort", "required": false, "schema": {"$ref": "#/components/schemas/pageSort"}}, "includeRenamedOpt": {"description": "Flag to indicate whether to include or exclude renamed assets.", "in": "query", "name": "includeRenamed", "required": false, "schema": {"default": false, "type": "boolean"}}, "includeDeletedOpt": {"description": "Flag to indicate whether to include or exclude deleted assets.", "in": "query", "name": "includeDeleted", "required": false, "schema": {"default": false, "type": "boolean"}}, "versionKeyOpt": {"description": "A 'key' of the key:value pair of version-settings in csi asset.", "in": "query", "name": "versionKey", "required": false, "schema": {"type": "string"}}, "versionValueOpt": {"description": "A 'value' of the key:value pair of version-settings in csi asset.", "in": "query", "name": "versionValue", "required": false, "schema": {"type": "string"}}, "revisionKeyOpt": {"description": "A 'key' of the key:value pair of revision-settings in csi asset.", "in": "query", "name": "revisionKey", "required": false, "schema": {"type": "string"}}, "revisionValueOpt": {"description": "A 'value' of the key:value pair of revision-settings in csi asset.", "in": "query", "name": "revisionValue", "required": false, "schema": {"type": "string"}}, "boschPurl": {"description": "A valid bosch-purl, also known as unique-name of an csi asset.", "in": "query", "name": "boschPurl", "required": true, "schema": {"type": "string"}}, "pathAssetId": {"description": "An uuid of a csi asset.", "in": "path", "name": "assetId", "required": true, "schema": {"format": "uuid", "type": "string"}}}, "schemas": {"getAssetData": {"example": {"createdBy": "createdBy", "created": "created", "document": "{}", "partNumber": "partNumber", "boschPurl": "boschPurl", "uuid": "uuid"}, "properties": {"uuid": {"title": "uuid", "type": "string"}, "boschPurl": {"title": "boschPurl", "type": "string"}, "partNumber": {"title": "partNumber", "type": "string"}, "created": {"title": "created", "type": "string"}, "createdBy": {"title": "createdBy", "type": "string"}, "document": {"title": "document", "type": "object"}}, "title": "getAssetData", "type": "object"}, "getSBOMGenerationConfig": {"properties": {"sbomFormat": {"$ref": "#/components/schemas/sbomFormat"}, "bomGenerationMode": {"$ref": "#/components/schemas/bomGenerationMode"}, "filterComponents": {"$ref": "#/components/schemas/filterComponents"}, "cyclonedxConfig": {"$ref": "#/components/schemas/cyclonedxConfig"}, "spdxConfig": {"$ref": "#/components/schemas/spdxConfig"}}, "required": ["bomGenerationMode", "sbomFormat"], "title": "getSBOMGenerationConfig", "type": "object"}, "sbomFormat": {"default": "CycloneDX", "enum": ["CycloneDX", "SPDX"], "title": "sbomFormat", "type": "string"}, "bomGenerationMode": {"default": "Bom", "enum": ["subBom", "BomOfBom", "Bom"], "title": "bomGenerationMode", "type": "string"}, "filterComponents": {"properties": {"blacklist": {"items": {"type": "string"}, "title": "blacklist", "type": "array"}, "whitelist": {"items": {"type": "string"}, "title": "whitelist", "type": "array"}, "excludeBoschPurls": {"default": false, "title": "excludeBoschPurls", "type": "boolean"}}, "title": "filterComponents", "type": "object"}, "cyclonedxConfig": {"properties": {"bomStructure": {"enum": ["hierarchical", "flat"], "title": "bomStructure", "type": "string"}, "excludeDataFields": {"$ref": "#/components/schemas/cyclonedxConfig_excludeDataFields"}}, "title": "cyclonedxConfig", "type": "object"}, "spdxConfig": {"properties": {"excludeDataFields": {"$ref": "#/components/schemas/spdxConfig_excludeDataFields"}, "excludeRelationships": {"items": {"enum": ["VARIANT_OF", "COPY_OF", "PATCH_FOR", "TEST_DEPENDENCY_OF", "CONTAINED_BY", "DATA_FILE_OF", "OPTIONAL_COMPONENT_OF", "ANCESTOR_OF", "GENERATES", "CONTAINS", "OPTIONAL_DEPENDENCY_OF", "FILE_ADDED", "DEV_DEPENDENCY_OF", "DEPENDENCY_OF", "BUILD_DEPENDENCY_OF", "DESCRIBES", "PREREQUISITE_FOR", "HAS_PREREQUISITE", "PROVIDED_DEPENDENCY_OF", "DYNAMIC_LINK", "DESCRIBED_BY", "METAFILE_OF", "DEPENDENCY_MANIFEST_OF", "PATCH_APPLIED", "RUNTIME_DEPENDENCY_OF", "TEST_OF", "TEST_TOOL_OF", "DEPENDS_ON", "FILE_MODIFIED", "DISTRIBUTION_ARTIFACT", "DOCUMENTATION_OF", "GENERATED_FROM", "STATIC_LINK", "OTHER", "BUILD_TOOL_OF", "TEST_CASE_OF", "PACKAGE_OF", "DESCENDANT_OF", "FILE_DELETED", "EXPANDED_FROM_ARCHIVE", "DEV_TOOL_OF", "EXAMPLE_OF"], "type": "string"}, "title": "excludeRelationships", "type": "array"}}, "title": "spdxConfig", "type": "object"}, "successResponse": {"example": {"success": true}, "properties": {"success": {"title": "success", "type": "boolean"}}, "title": "successResponse", "type": "object"}, "assetUsageSuccessResponse": {"example": {"mode": "direct", "detailed_output": true, "usages": {"pkg:bosch.sbomdocument/com/bosch/x@1.0.0": [{"pkg:bosch.system/com/bosch/a@1.0.0": "contains"}, {"pkg:bosch.swelement/com/bosch/b@1.0.0": "dependsOn"}]}, "queried_asset": "pkg:bosch.system/com/bosch/x@1.0.0"}, "properties": {"mode": {"example": "direct", "title": "mode", "type": "string"}, "queried_asset": {"example": "pkg:bosch.system/com/bosch/x@1.0.0", "title": "queried_asset", "type": "string"}, "detailed_output": {"example": true, "title": "detailed_output", "type": "boolean"}, "usages": {"$ref": "#/components/schemas/assetUsageSuccessResponse_usages"}}, "title": "assetUsageSuccessResponse", "type": "object"}, "assetUsageListResponse": {"items": {"example": "pkg:bosch.system/com/bosch/a@1.0.0, pkg:bosch.system/com/bosch/b@1.0.0", "type": "string"}, "type": "array"}, "assetUsageDictResponse": {"example": {"pkg:bosch.sbomdocument/com/bosch/x@1.0.0": [{"pkg:bosch.system/com/bosch/a@1.0.0": "contains"}, {"pkg:bosch.swelement/com/bosch/b@1.0.0": "dependsOn"}]}, "type": "object"}, "postAssetSuccessResponse": {"example": {"productVersionSet": {"uniqueName": "uniqueName", "document": {"identification": {"name": "name", "nameSpace": "nameSpace"}, "totalProducts": "totalProducts", "baseIdentityIndex": "baseIdentityIndex", "currentVersionIndex": "currentVersionIndex", "hasCsiProducts": ["hasCsiProducts", "hasCsiProducts"]}, "uuid": "uuid"}, "success": true, "document": "{}", "boschPurl": "boschPurl", "uuid": "uuid"}, "properties": {"success": {"title": "success", "type": "boolean"}, "boschPurl": {"title": "boschPurl", "type": "string"}, "uuid": {"title": "uuid", "type": "string"}, "document": {"title": "document", "type": "object"}, "productVersionSet": {"$ref": "#/components/schemas/productVersionSetResponse"}}, "title": "postAssetSuccessResponse", "type": "object"}, "productVersionSetResponse": {"example": {"uniqueName": "uniqueName", "document": {"identification": {"name": "name", "nameSpace": "nameSpace"}, "totalProducts": "totalProducts", "baseIdentityIndex": "baseIdentityIndex", "currentVersionIndex": "currentVersionIndex", "hasCsiProducts": ["hasCsiProducts", "hasCsiProducts"]}, "uuid": "uuid"}, "properties": {"uniqueName": {"title": "uniqueName", "type": "string"}, "uuid": {"title": "uuid", "type": "string"}, "document": {"$ref": "#/components/schemas/productVersionSetDocumentResponse"}}, "title": "productVersionSetResponse", "type": "object"}, "productVersionSetDocumentResponse": {"example": {"identification": {"name": "name", "nameSpace": "nameSpace"}, "totalProducts": "totalProducts", "baseIdentityIndex": "baseIdentityIndex", "currentVersionIndex": "currentVersionIndex", "hasCsiProducts": ["hasCsiProducts", "hasCsiProducts"]}, "properties": {"identification": {"$ref": "#/components/schemas/productVersionSetDocumentResponse_identification"}, "baseIdentityIndex": {"title": "baseIdentityIndex", "type": "string"}, "currentVersionIndex": {"title": "currentVersionIndex", "type": "string"}, "hasCsiProducts": {"items": {"type": "string"}, "title": "hasCsiProducts", "type": "array"}, "totalProducts": {"title": "totalProducts", "type": "string"}}, "title": "productVersionSetDocumentResponse", "type": "object"}, "sbomDocumentSuccessResponse": {"example": {"sbom-documents": [{"uniqueName": "uniqueName", "uuid": "uuid"}, {"uniqueName": "uniqueName", "uuid": "uuid"}]}, "properties": {"sbom-documents": {"items": {"$ref": "#/components/schemas/sbomDocumentSuccessResponse_sbom_documents_inner"}, "title": "sbom-documents", "type": "array"}}, "title": "sbomDocumentSuccessResponse", "type": "object"}, "successMsgResponse": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "sbomSuccessMsgResponse": {"example": {"success": true, "message": "message", "container_id": "container_id"}, "properties": {"message": {"title": "message", "type": "string"}, "success": {"title": "success", "type": "boolean"}, "container_id": {"title": "container_id", "type": "string"}}, "title": "sbomSuccessMsgResponse", "type": "object"}, "errorResponse": {"example": {"success": true, "message": "message"}, "properties": {"message": {"title": "message", "type": "string"}, "success": {"title": "success", "type": "boolean"}}, "title": "errorResponse", "type": "object"}, "errorDeleteResponse": {"example": {"references": ["references", "references"], "success": true, "message": "message"}, "properties": {"message": {"title": "message", "type": "string"}, "success": {"title": "success", "type": "boolean"}, "references": {"items": {"type": "string"}, "title": "references", "type": "array"}}, "title": "errorDeleteResponse", "type": "object"}, "unauthorizeOrBadRequestResponse": {"example": {"detail": "detail", "type": "type", "title": "title", "status": 0}, "properties": {"type": {"title": "type", "type": "string"}, "title": {"title": "title", "type": "string"}, "detail": {"title": "detail", "type": "string"}, "status": {"title": "status", "type": "integer"}}, "title": "unauthorizeOrBadRequestResponse", "type": "object"}, "getAssetsResponse": {"example": {"pagination": {"pageNumber": 1, "totalPages": 0, "pageSize": 1, "totalCount": 0}, "data": [{"createdBy": "createdBy", "created": "created", "document": "{}", "partNumber": "partNumber", "boschPurl": "boschPurl", "uuid": "uuid"}, {"createdBy": "createdBy", "created": "created", "document": "{}", "partNumber": "partNumber", "boschPurl": "boschPurl", "uuid": "uuid"}], "links": {"next": "next", "last": "last", "previous": "previous", "first": "first"}}, "properties": {"data": {"items": {"$ref": "#/components/schemas/getAssetData"}, "title": "data", "type": "array"}, "links": {"$ref": "#/components/schemas/links"}, "pagination": {"$ref": "#/components/schemas/pagination"}}, "title": "getAssetsResponse", "type": "object"}, "postAssetResponse": {"$ref": "#/components/schemas/getAssetData"}, "postAssetsBatchRequest": {"properties": {"operation": {"enum": ["create", "update"], "title": "operation", "type": "string"}, "document": {"title": "document", "type": "object"}}, "title": "postAssetsBatchRequest", "type": "object"}, "postAssetIdSbomRequest": {"properties": {"forceUpdate": {"type": "string"}, "bomData": {"type": "object"}}, "required": ["bomData"], "type": "object"}, "getAssetsQueryRequest": {"properties": {"filter": {"type": "object"}, "projection": {"type": "object"}, "sort": {"items": {}, "type": "array"}}, "type": "object"}, "configurationItem": {"properties": {"provider_file": {"type": "string"}, "consumer_files": {"items": {"type": "string"}, "type": "array"}, "status": {"type": "boolean"}, "log_link": {"type": "string"}, "additional_files": {"items": {"type": "string"}, "type": "array"}, "bosch_purl": {"type": "string"}, "technical_failure": {"items": {"type": "string"}, "type": "array"}}, "type": "object"}, "AdlsSasToken": {"example": {"sas_token": "st=2024-07-30T08%3A13%3A43Z&se=2024-07-31T08%3A13%3A43Z", "storage_name": "csidevadls", "container_name": "sbom", "directory_name": "new"}, "properties": {"sas_token": {"description": "Token to upload file to a directory in csi storage account container", "example": "st=2024-07-30T08%3A13%3A43Z&se=2024-07-31T08%3A13%3A43Z", "nullable": false, "title": "sas_token", "type": "string"}, "storage_name": {"description": "Name of the storage account to which the files can be uploaded", "example": "csidevadls", "nullable": false, "title": "storage_name", "type": "string"}, "container_name": {"description": "Name of the container within storage account to which the files can be uploaded", "example": "sbom", "nullable": false, "title": "container_name", "type": "string"}, "directory_name": {"description": "Name of the folder within storage account container to which the files can be uploaded", "example": "new", "nullable": false, "title": "directory_name", "type": "string"}}, "title": "AdlsSasToken", "type": "object"}, "postConfigurationItemResponse": {"properties": {"container_id": {"type": "string"}, "configurations": {"type": "object"}, "status": {"type": "boolean"}, "summary": {"$ref": "#/components/schemas/postConfigurationItemResponse_summary"}}, "type": "object"}, "has-access": {"example": {"hasAccess": true}, "properties": {"hasAccess": {"title": "hasAccess", "type": "boolean"}}, "title": "has-access", "type": "object"}, "partNumber": {"pattern": "^(DV|SW|QA|TT)[B-DF-HJ-NPR-TV-Z0-9]{13}|-", "type": "string"}, "schemaType": {"enum": ["capability", "dataobject", "erratum", "fixpoint", "interface", "namespace", "product", "productversionset", "project", "sbomdocument", "team"], "title": "schemaType", "type": "string"}, "schemaSubType": {"enum": ["aielement", "dataelement", "hwelement", "securityelement", "service", "swelement", "system", "tool"], "title": "schemaSubType", "type": "string"}, "pageNumber": {"default": 1, "minimum": 1, "type": "integer"}, "pageSize": {"default": 10, "minimum": 1, "type": "integer"}, "pageSort": {"default": "boschPurl", "enum": ["boschPurl", "uuid"], "title": "pageSort", "type": "string"}, "links": {"example": {"next": "next", "last": "last", "previous": "previous", "first": "first"}, "properties": {"first": {"title": "first", "type": "string"}, "last": {"title": "last", "type": "string"}, "next": {"nullable": true, "title": "next", "type": "string"}, "previous": {"nullable": true, "title": "previous", "type": "string"}}, "title": "links", "type": "object"}, "pagination": {"example": {"pageNumber": 1, "totalPages": 0, "pageSize": 1, "totalCount": 0}, "properties": {"pageNumber": {"minimum": 1, "title": "pageNumber", "type": "integer"}, "pageSize": {"minimum": 1, "title": "pageSize", "type": "integer"}, "totalCount": {"minimum": 0, "title": "totalCount", "type": "integer"}, "totalPages": {"minimum": 0, "title": "totalPages", "type": "integer"}}, "title": "pagination", "type": "object"}, "cyclonedxConfig_excludeDataFields_header_metadata": {"properties": {"supplier": {"default": false, "title": "supplier", "type": "boolean"}, "manufacture": {"default": false, "title": "manufacture", "type": "boolean"}}, "title": "cyclonedxConfig_excludeDataFields_header_metadata", "type": "object"}, "cyclonedxConfig_excludeDataFields_header": {"properties": {"externalReferences": {"default": false, "title": "externalReferences", "type": "boolean"}, "dependencies": {"default": false, "title": "dependencies", "type": "boolean"}, "metadata": {"$ref": "#/components/schemas/cyclonedxConfig_excludeDataFields_header_metadata"}}, "title": "cyclonedxConfig_excludeDataFields_header", "type": "object"}, "cyclonedxConfig_excludeDataFields_components": {"properties": {"supplier": {"default": false, "title": "supplier", "type": "boolean"}, "author": {"default": false, "title": "author", "type": "boolean"}, "publisher": {"default": false, "title": "publisher", "type": "boolean"}, "hashes": {"default": false, "title": "hashes", "type": "boolean"}, "licenses": {"default": false, "title": "licenses", "type": "boolean"}, "copyright": {"default": false, "title": "copyright", "type": "boolean"}, "cpe": {"default": false, "title": "cpe", "type": "boolean"}, "boschPurl": {"default": false, "title": "boschPurl", "type": "boolean"}, "purl": {"default": false, "title": "purl", "type": "boolean"}, "pedigree": {"default": false, "title": "pedigree", "type": "boolean"}, "externalReferences": {"default": false, "title": "externalReferences", "type": "boolean"}}, "title": "cyclonedxConfig_excludeDataFields_components", "type": "object"}, "cyclonedxConfig_excludeDataFields": {"properties": {"header": {"$ref": "#/components/schemas/cyclonedxConfig_excludeDataFields_header"}, "components": {"$ref": "#/components/schemas/cyclonedxConfig_excludeDataFields_components"}, "excludeRelationships": {"items": {"enum": ["CONTAINS", "DEPENDS_ON"], "type": "string"}, "title": "excludeRelationships", "type": "array"}}, "title": "cyclonedxConfig_excludeDataFields", "type": "object"}, "spdxConfig_excludeDataFields_header_creationInfo": {"properties": {"licenseListVersion": {"default": false, "title": "licenseListVersion", "type": "boolean"}}, "title": "spdxConfig_excludeDataFields_header_creationInfo", "type": "object"}, "spdxConfig_excludeDataFields_header": {"properties": {"dataLicense": {"default": false, "title": "dataLicense", "type": "boolean"}, "creationInfo": {"$ref": "#/components/schemas/spdxConfig_excludeDataFields_header_creationInfo"}, "hasExtractedLicensingInfo": {"default": false, "title": "hasExtractedLicensingInfo", "type": "boolean"}}, "title": "spdxConfig_excludeDataFields_header", "type": "object"}, "spdxConfig_excludeDataFields_Packages": {"properties": {"supplier": {"default": false, "title": "supplier", "type": "boolean"}, "licenseDeclared": {"default": false, "title": "licenseDeclared", "type": "boolean"}, "checksums": {"default": false, "title": "checksums", "type": "boolean"}, "downloadLocation": {"default": false, "title": "downloadLocation", "type": "boolean"}, "externalRefs": {"default": false, "title": "externalRefs", "type": "boolean"}, "copyrightText": {"default": false, "title": "copyrightText", "type": "boolean"}, "originator": {"default": false, "title": "originator", "type": "boolean"}, "licenseConcluded": {"default": false, "title": "licenseConcluded", "type": "boolean"}, "licenseInfoFromFiles": {"default": false, "title": "licenseInfoFromFiles", "type": "boolean"}}, "title": "spdxConfig_excludeDataFields_Packages", "type": "object"}, "spdxConfig_excludeDataFields": {"properties": {"header": {"$ref": "#/components/schemas/spdxConfig_excludeDataFields_header"}, "Packages": {"$ref": "#/components/schemas/spdxConfig_excludeDataFields_Packages"}}, "title": "spdxConfig_excludeDataFields", "type": "object"}, "assetUsageSuccessResponse_usages": {"oneOf": [{"$ref": "#/components/schemas/assetUsageDictResponse"}, {"$ref": "#/components/schemas/assetUsageListResponse"}], "title": "assetUsageSuccessResponse_usages"}, "productVersionSetDocumentResponse_identification": {"example": {"name": "name", "nameSpace": "nameSpace"}, "properties": {"name": {"title": "name", "type": "string"}, "nameSpace": {"title": "nameSpace", "type": "string"}}, "title": "productVersionSetDocumentResponse_identification", "type": "object"}, "sbomDocumentSuccessResponse_sbom_documents_inner": {"example": {"uniqueName": "uniqueName", "uuid": "uuid"}, "properties": {"uniqueName": {"title": "uniqueName", "type": "string"}, "uuid": {"title": "uuid", "type": "string"}}, "title": "sbomDocumentSuccessResponse_sbom_documents_inner", "type": "object"}, "postConfigurationItemResponse_summary": {"properties": {"total_upload": {"minimum": 0, "title": "total_upload", "type": "integer"}, "successful_upload": {"minimum": 0, "title": "successful_upload", "type": "integer"}, "failed_upload": {"minimum": 0, "title": "failed_upload", "type": "integer"}, "success_rate": {"minimum": 0, "title": "success_rate", "type": "integer"}, "failure_rate": {"minimum": 0, "title": "failure_rate", "type": "integer"}}, "title": "postConfigurationItemResponse_summary", "type": "object"}}, "securitySchemes": {"keyId": {"description": "Your personal API token, as shown on https://sbom.bosch.tech/profile", "in": "header", "name": "KeyID", "type": "apiKey", "x-apikeyInfoFunc": "metadata.controllers.security_controller.info_from_keyId"}}}}
